/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodosRouteImport } from './routes/todos'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as CoursesRouteImport } from './routes/courses'
import { Route as ContributorsRouteImport } from './routes/contributors'
import { Route as ContributeRouteImport } from './routes/contribute'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const TodosRoute = TodosRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesRoute = CoursesRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => rootRouteImport,
} as any)
const ContributorsRoute = ContributorsRouteImport.update({
  id: '/contributors',
  path: '/contributors',
  getParentRoute: () => rootRouteImport,
} as any)
const ContributeRoute = ContributeRouteImport.update({
  id: '/contribute',
  path: '/contribute',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/contribute': typeof ContributeRoute
  '/contributors': typeof ContributorsRoute
  '/courses': typeof CoursesRoute
  '/dashboard': typeof DashboardRoute
  '/todos': typeof TodosRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/contribute': typeof ContributeRoute
  '/contributors': typeof ContributorsRoute
  '/courses': typeof CoursesRoute
  '/dashboard': typeof DashboardRoute
  '/todos': typeof TodosRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/contribute': typeof ContributeRoute
  '/contributors': typeof ContributorsRoute
  '/courses': typeof CoursesRoute
  '/dashboard': typeof DashboardRoute
  '/todos': typeof TodosRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/contribute'
    | '/contributors'
    | '/courses'
    | '/dashboard'
    | '/todos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/contribute'
    | '/contributors'
    | '/courses'
    | '/dashboard'
    | '/todos'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/contribute'
    | '/contributors'
    | '/courses'
    | '/dashboard'
    | '/todos'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  ContributeRoute: typeof ContributeRoute
  ContributorsRoute: typeof ContributorsRoute
  CoursesRoute: typeof CoursesRoute
  DashboardRoute: typeof DashboardRoute
  TodosRoute: typeof TodosRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses': {
      id: '/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contributors': {
      id: '/contributors'
      path: '/contributors'
      fullPath: '/contributors'
      preLoaderRoute: typeof ContributorsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contribute': {
      id: '/contribute'
      path: '/contribute'
      fullPath: '/contribute'
      preLoaderRoute: typeof ContributeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  ContributeRoute: ContributeRoute,
  ContributorsRoute: ContributorsRoute,
  CoursesRoute: CoursesRoute,
  DashboardRoute: DashboardRoute,
  TodosRoute: TodosRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
